<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mapper.Employmapper">
<!--    #{key}：占位符+赋值    emp_id=?      ?=赋值-->
<!--    ${key}:    字符串拼接      "emp_id="+id-->
<!--    推荐使用#{key} 防止【注入攻击】的问题-->
<!--    通常不会采用${}的方式传值。一个特定的适用场景是：通过Java程序动态生成数据库表，表名部分需要Java程序通过参数传入；而JDBC对于表名部分是不能使用问号占位符的，此时只能使用-->
<!--    结论：实际开发中，能用#{}实现的，肯定不用${}。-->
<!--    特殊情况： 动态的不是值，是列名或者关键字，需要使用${}拼接-->

<!--    单个简单类型传入，随便指定名字都可以-->
    <select id="queryById" resultType="pojo.Employee">
        select emp_id empId,emp_name empName, emp_salary empSalary from
        t_emp where emp_id = #{empId}
    </select>
<!--    实体类类型，传入属性名称-->
    <insert id="insertEmployee">
        insert into t_emp(emp_name,emp_salary) values(#{empName},#{empSalary})
    </insert>
<!--多个简单类型数据传入，两种方案-->
    <select id="queryByNameAndSalary" resultType="pojo.Employee">
        select emp_id empId,emp_name empName,em[_salary empSalary
                        from t_emp where emp_name=#{a} and emp_salary=#{b}
    </select>
<!--    Map类型数据传入,传入的就是Map中的key的名称-->
    <insert id="nsertEmployMap">
        insert into t_emp(emp_name,emp_salary) values(#{empName},#{empSalary})
    </insert>
</mapper>